{"version":3,"sources":["components/getPosts.tsx","components/DownloadButton.tsx","components/PostsList.tsx","App.tsx","helper/customDebounce.js","index.tsx"],"names":["getDatas","url","a","fetch","getInfo","infoToJson","json","preparedDatas","Promise","all","posts","users","comments","finallyDatas","map","post","user","find","ownerPost","id","userId","postsComments","filter","comment","postId","DownloadButton","dataGeneration","isLoading","type","onClick","disabled","className","PostsList","key","title","body","comm","name","email","App","visiblePosts","value","useState","isLoaded","loadStatus","getPost","downloadError","setError","searchValue","setSearchValue","debounceWrapper","f","delay","timerId","clearTimeout","args","setTimeout","debounce","setValue","replace","includes","then","data","catch","finally","placeholder","onChange","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf7f6013.chunk.js","sourcesContent":["import { Post, User, Comments } from './interfaces';\n\nconst getDatas = async (url: string) => {\n  const getInfo = await fetch(`./api/${url}.json`);\n  const infoToJson = getInfo.json();\n\n  return infoToJson;\n};\n\nexport const preparedDatas = async () => {\n  const [posts, users, comments] = await Promise.all([\n    getDatas('posts'),\n    getDatas('users'),\n    getDatas('comments'),\n  ]);\n\n  const finallyDatas = posts.map((post: Post) => {\n    const user = users.find((ownerPost: User) => ownerPost.id === post.userId);\n    const postsComments = comments.filter((comment: Comments) => comment.postId === post.id);\n\n    return {\n      ...post,\n      user,\n      comments: postsComments,\n    };\n  });\n\n  return finallyDatas;\n};\n","import React from 'react';\n\ninterface Props {\n  dataGeneration: () => void;\n  isLoading: boolean;\n}\n\nexport const DownloadButton: React.FC<Props> = ({ dataGeneration, isLoading }) => {\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={dataGeneration}\n        disabled={isLoading}\n        className=\"loading-button\"\n      >\n        Get posts\n      </button>\n      {isLoading && (\n        <p className=\"loading-text\">Loading... Please wait!</p>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Post } from './interfaces';\n\ninterface Props {\n  posts: Post[];\n}\n\nexport const PostsList: React.FC<Props> = ({ posts }) => {\n  return (\n    <>\n      {posts.map(post => (\n        <div className=\"post\" key={post.id}>\n          <p className=\"post__title\">\n            <span className=\"post__id\">\n              {post.id}\n              .\n            </span>\n            {post.title}\n          </p>\n          <p className=\"post__body\">\n            {post.body}\n          </p>\n          {post.comments.map(comm => (\n            <div className=\"post__comm\" key={comm.id}>\n              <div className=\"comm\">\n                <p className=\"comm__name\">\n                  {comm.name}\n                </p>\n                <p className=\"comm__email\">\n                  {comm.email}\n                </p>\n                <p className=\"comm__body\">\n                  {comm.body}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n    </>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport './App.scss';\nimport { Post } from './components/interfaces';\nimport { preparedDatas } from './components/getPosts';\nimport { DownloadButton } from './components/DownloadButton';\nimport { PostsList } from './components/PostsList';\nimport { debounce } from './helper/customDebounce';\n\nconst App: FC = () => {\n  const [isLoading, dataGeneration] = useState(false);\n  const [isLoaded, loadStatus] = useState(false);\n  const [posts, getPost] = useState([]);\n  const [downloadError, setError] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  let visiblePosts: Post[];\n\n  const loadData = () => {\n    dataGeneration(true);\n    preparedDatas()\n      .then(data => {\n        getPost(data);\n        loadStatus(true);\n        setError(false);\n      })\n      .catch(() => setError(true))\n      .finally(() => dataGeneration(false));\n  };\n\n  const startSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    debounceWrapper(value);\n  };\n\n  const setValue = (value: string) => {\n    setSearchValue(value);\n  };\n\n  const filterPosts = (value: string) => {\n    if (!value) {\n      return posts;\n    }\n\n    return posts\n      .filter((post: Post) => (post.title + post.body)\n        .replace(/\\s*/g, ' ')\n        .includes(value\n          .replace(/\\s*/g, ' ')));\n  };\n\n  const debounceWrapper = debounce((value: string) => setValue(value), 1000);\n\n  visiblePosts = filterPosts(searchValue);\n\n  return (\n    <>\n      <h1 className=\"title\">Posts</h1>\n      {!isLoaded\n        && <DownloadButton isLoading={isLoading} dataGeneration={loadData} />}\n      {downloadError && (\n        <p className=\"error\">Loading error, please, try again.</p>\n      )}\n      {isLoaded && (\n        <>\n          <div className=\"inputContainer\">\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"write a text for search\"\n              onChange={startSearch}\n            />\n          </div>\n          <PostsList posts={visiblePosts} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","export const debounce = (f, delay) => {\n  let timerId;\n\n  const debounced = (...args) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, ...args);\n  };\n\n  return debounced;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}